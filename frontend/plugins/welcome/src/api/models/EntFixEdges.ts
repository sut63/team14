/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API Playlist Vidoe
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntAdminrepair,
    EntAdminrepairFromJSON,
    EntAdminrepairFromJSONTyped,
    EntAdminrepairToJSON,
    EntCustomer,
    EntCustomerFromJSON,
    EntCustomerFromJSONTyped,
    EntCustomerToJSON,
    EntFixbrand,
    EntFixbrandFromJSON,
    EntFixbrandFromJSONTyped,
    EntFixbrandToJSON,
    EntFixcomtype,
    EntFixcomtypeFromJSON,
    EntFixcomtypeFromJSONTyped,
    EntFixcomtypeToJSON,
    EntPersonal,
    EntPersonalFromJSON,
    EntPersonalFromJSONTyped,
    EntPersonalToJSON,
} from './';

/**
 * 
 * @export
 * @interface EntFixEdges
 */
export interface EntFixEdges {
    /**
     * 
     * @type {EntCustomer}
     * @memberof EntFixEdges
     */
    customer?: EntCustomer;
    /**
     * 
     * @type {EntAdminrepair}
     * @memberof EntFixEdges
     */
    fix?: EntAdminrepair;
    /**
     * 
     * @type {EntFixbrand}
     * @memberof EntFixEdges
     */
    fixbrand?: EntFixbrand;
    /**
     * 
     * @type {EntFixcomtype}
     * @memberof EntFixEdges
     */
    fixcomtype?: EntFixcomtype;
    /**
     * 
     * @type {EntPersonal}
     * @memberof EntFixEdges
     */
    personal?: EntPersonal;
}

export function EntFixEdgesFromJSON(json: any): EntFixEdges {
    return EntFixEdgesFromJSONTyped(json, false);
}

export function EntFixEdgesFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntFixEdges {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'customer': !exists(json, 'Customer') ? undefined : EntCustomerFromJSON(json['Customer']),
        'fix': !exists(json, 'Fix') ? undefined : EntAdminrepairFromJSON(json['Fix']),
        'fixbrand': !exists(json, 'Fixbrand') ? undefined : EntFixbrandFromJSON(json['Fixbrand']),
        'fixcomtype': !exists(json, 'Fixcomtype') ? undefined : EntFixcomtypeFromJSON(json['Fixcomtype']),
        'personal': !exists(json, 'Personal') ? undefined : EntPersonalFromJSON(json['Personal']),
    };
}

export function EntFixEdgesToJSON(value?: EntFixEdges | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'customer': EntCustomerToJSON(value.customer),
        'fix': EntAdminrepairToJSON(value.fix),
        'fixbrand': EntFixbrandToJSON(value.fixbrand),
        'fixcomtype': EntFixcomtypeToJSON(value.fixcomtype),
        'personal': EntPersonalToJSON(value.personal),
    };
}


