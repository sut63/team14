{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server for SUT SE 2563",
        "title": "SUT SA Example API Playlist Vidoe",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/adminrepairs": {
            "get": {
                "description": "list adminrepair entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List adminrepair entities",
                "operationId": "list-adminrepair",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Adminrepair"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create adminrepair",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create adminrepair",
                "operationId": "create-adminrepair",
                "parameters": [
                    {
                        "description": "Adminrepair entity",
                        "name": "adminrepair",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Adminrepair"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Adminrepair"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/adminrepairs/{id}": {
            "get": {
                "description": "get adminrepair by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a adminrepair entity by ID",
                "operationId": "get-adminrepair",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Adminrepair ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Adminrepair"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update adminrepair by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a adminrepair entity by ID",
                "operationId": "update-adminrepair",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Adminrepair ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Adminrepair entity",
                        "name": "adminrepair",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Adminrepair"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Adminrepair"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get adminrepair by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a adminrepair entity by ID",
                "operationId": "delete-adminrepair",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Adminrepair ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/brand/{id}": {
            "delete": {
                "description": "get brand by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a brand entity by ID",
                "operationId": "delete-brand",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Brand ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/brands": {
            "get": {
                "description": "list brand entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List brand entities",
                "operationId": "list-brand",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Brand"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create brand",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create brand",
                "operationId": "create-brand",
                "parameters": [
                    {
                        "description": "Brand entity",
                        "name": "brand",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Brand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Brand"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/brands/{id}": {
            "get": {
                "description": "get brand by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a brand entity by ID",
                "operationId": "get-brand",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Brand ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Brand"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/customers": {
            "get": {
                "description": "list customer entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List customer entities",
                "operationId": "list-customer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Customer"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create customer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create customer",
                "operationId": "create-customer",
                "parameters": [
                    {
                        "description": "Customer entity",
                        "name": "customer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Customer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.Customer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/customers/{id}": {
            "get": {
                "description": "get customer by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a customer entity by ID",
                "operationId": "get-customer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Customer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Customer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update customer by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a customer entity by ID",
                "operationId": "update-customer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Customer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Customer entity",
                        "name": "customer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Customer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Customer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get customer by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a customer entity by ID",
                "operationId": "delete-customer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Customer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/departments": {
            "get": {
                "description": "list department entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List department entities",
                "operationId": "list-department",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Department"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create departmnet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create departmnet",
                "operationId": "create-departmnet",
                "parameters": [
                    {
                        "description": "Department entity",
                        "name": "departmnet",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Department"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.Department"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/departments/{id}": {
            "get": {
                "description": "get department by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a department entity by ID",
                "operationId": "get-department",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Department ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Department"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update department by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a department entity by ID",
                "operationId": "update-department",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Department ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Department entity",
                        "name": "department",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Department"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Department"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get department by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a department entity by ID",
                "operationId": "delete-department",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Department ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/fixbrands": {
            "get": {
                "description": "list fixbrand entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List fixbrand entities",
                "operationId": "list-fixbrand",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Fixbrand"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create fixbrand",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create fixbrand",
                "operationId": "create-fixbrand",
                "parameters": [
                    {
                        "description": "Fixbrand entity",
                        "name": "fixbrand",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Fixbrand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Fixbrand"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/fixbrands/{id}": {
            "get": {
                "description": "get fixbrand by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a fixbrand entity by ID",
                "operationId": "get-fixbrand",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Fixbrand ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Fixbrand"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get fixbrand by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a fixbrand entity by ID",
                "operationId": "delete-fixbrand",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Fixbrand ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/fixcomtypes": {
            "get": {
                "description": "list fixcomtype entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List fixcomtype entities",
                "operationId": "list-fixcomtype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Fixcomtype"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create fixcomtype",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create fixcomtype",
                "operationId": "create-fixcomtype",
                "parameters": [
                    {
                        "description": "Fixcomtype entity",
                        "name": "fixcomtype",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Fixcomtype"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.Fixcomtype"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/fixcomtypes/{id}": {
            "get": {
                "description": "get fixcomtype by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a fixcomtype entity by ID",
                "operationId": "get-fixcomtype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Fixcomtype ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Fixcomtype"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update fixcomtype by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a fixcomtype entity by ID",
                "operationId": "update-fixcomtype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Fixcomtype ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Fixcomtype entity",
                        "name": "fixcomtype",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Fixcomtype"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Fixcomtype"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get fixcomtype by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a fixcomtype entity by ID",
                "operationId": "delete-fixcomtype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Fixcomtype ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/fixs": {
            "get": {
                "description": "list fix entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List fix entities",
                "operationId": "list-fix",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Fix"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create fix",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create fix",
                "operationId": "create-fix",
                "parameters": [
                    {
                        "description": "Fix entity",
                        "name": "fix",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Fix"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.Fix"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/fixs/{id}": {
            "get": {
                "description": "get fix by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a fix entity by ID",
                "operationId": "get-fix",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Fix ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Fix"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update fix by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a fix entity by ID",
                "operationId": "update-fix",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Fix ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Fix entity",
                        "name": "fix",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Fix"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Fix"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get fix by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a fix entity by ID",
                "operationId": "delete-fix",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Fix ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/genders": {
            "get": {
                "description": "list gender entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List gender entities",
                "operationId": "list-gender",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Gender"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create gender",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create gender",
                "operationId": "create-gender",
                "parameters": [
                    {
                        "description": "Gender entity",
                        "name": "gender",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Gender"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.Gender"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/genders/{id}": {
            "get": {
                "description": "get gender by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a gender entity by ID",
                "operationId": "get-gender",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Gender ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Gender"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update gender by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a gender entity by ID",
                "operationId": "update-gender",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Gender ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Gender entity",
                        "name": "gender",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Gender"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Gender"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get gender by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a gender entity by ID",
                "operationId": "delete-gender",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Gender ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/paymenttypes": {
            "get": {
                "description": "list paymenttype entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List paymenttype entities",
                "operationId": "list-paymenttype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.PaymentType"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create paymenttype",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create paymenttype",
                "operationId": "create-paymenttype",
                "parameters": [
                    {
                        "description": "PaymentType entity",
                        "name": "paymenttype",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.PaymentType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.PaymentType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/paymenttypes/{id}": {
            "get": {
                "description": "get paymenttype by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a paymenttype entity by ID",
                "operationId": "get-paymenttype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "PaymentType ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.PaymentType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update paymenttype by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a paymenttype entity by ID",
                "operationId": "update-paymenttype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "PaymentType ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "PaymentType entity",
                        "name": "paymenttype",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.PaymentType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.PaymentType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get paymenttype by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a paymenttype entity by ID",
                "operationId": "delete-paymenttype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "PaymentType ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/personals": {
            "get": {
                "description": "list personal entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List personal entities",
                "operationId": "list-personal",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Personal"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create personal",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create personal",
                "operationId": "create-personal",
                "parameters": [
                    {
                        "description": "Personal entity",
                        "name": "personal",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Personal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.Personal"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/personals/{id}": {
            "get": {
                "description": "get personal by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a personal entity by ID",
                "operationId": "get-personal",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Personal ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Personal"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update personal by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a personal entity by ID",
                "operationId": "update-personal",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Personal ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Personal entity",
                        "name": "personal",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Personal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Personal"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get personal by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a personal entity by ID",
                "operationId": "delete-personal",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Personal ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/products": {
            "get": {
                "description": "list product entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List product entities",
                "operationId": "list-product",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Product"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create product",
                "operationId": "create-product",
                "parameters": [
                    {
                        "description": "Product entity",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Product"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.Product"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/products/{id}": {
            "delete": {
                "description": "get product by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a product entity by ID",
                "operationId": "delete-product",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/receipts": {
            "get": {
                "description": "list receipt entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List receipt entities",
                "operationId": "list-receipt",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Receipt"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create receipt",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create receipt",
                "operationId": "create-receipt",
                "parameters": [
                    {
                        "description": "Receipt entity",
                        "name": "receipt",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Receipt"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.Receipt"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/receipts/{id}": {
            "get": {
                "description": "get receipt by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a receipt entity by ID",
                "operationId": "get-receipt",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Receipt ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Receipt"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update receipt by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a receipt entity by ID",
                "operationId": "update-receipt",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "receipt ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Receipt entity",
                        "name": "receipt",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Receipt"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Receipt"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get receipt by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a receipt entity by ID",
                "operationId": "delete-receipt",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Receipt ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/titles": {
            "get": {
                "description": "list title entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List title entities",
                "operationId": "list-title",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Title"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create title",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create title",
                "operationId": "create-title",
                "parameters": [
                    {
                        "description": "Title entity",
                        "name": "title",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Title"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.Title"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/titles/{id}": {
            "get": {
                "description": "get title by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a title entity by ID",
                "operationId": "get-title",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Title ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Title"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update title by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a title entity by ID",
                "operationId": "update-title",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Title ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Title entity",
                        "name": "title",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Title"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Title"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get title by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a title entity by ID",
                "operationId": "delete-title",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Title ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/typeproduct/{id}": {
            "delete": {
                "description": "get typeproduct by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a typeproduct entity by ID",
                "operationId": "delete-typeproduct",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Typeproduct ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/typeproducts": {
            "get": {
                "description": "list typeproduct entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List typeproduct entities",
                "operationId": "list-typeproduct",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Typeproduct"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create typeproduct",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create typeproduct",
                "operationId": "create-typeproduct",
                "parameters": [
                    {
                        "description": "typeproduct entity",
                        "name": "typeproduct",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Typeproduct"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Typeproduct"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/typeproducts/{id}": {
            "get": {
                "description": "get typeproduct by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a typeproduct entity by ID",
                "operationId": "get-typeproduct",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Typeproduct ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Typeproduct"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.Adminrepair": {
            "type": "object",
            "properties": {
                "equipmentdamate": {
                    "type": "string"
                },
                "fix": {
                    "type": "integer"
                },
                "numberrepair": {
                    "type": "string"
                },
                "personal": {
                    "type": "integer"
                },
                "product": {
                    "type": "integer"
                },
                "repairinformation": {
                    "type": "string"
                }
            }
        },
        "controllers.Customer": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "customername": {
                    "type": "string"
                },
                "gender": {
                    "type": "integer"
                },
                "identificationnumber": {
                    "type": "string"
                },
                "personal": {
                    "type": "integer"
                },
                "phonenumber": {
                    "type": "string"
                },
                "title": {
                    "type": "integer"
                }
            }
        },
        "controllers.Department": {
            "type": "object",
            "properties": {
                "departmentname": {
                    "type": "string"
                }
            }
        },
        "controllers.Fix": {
            "type": "object",
            "properties": {
                "customer": {
                    "type": "integer"
                },
                "date": {
                    "type": "string"
                },
                "fixbrand": {
                    "type": "integer"
                },
                "fixcomtype": {
                    "type": "integer"
                },
                "personal": {
                    "type": "integer"
                },
                "problemtype": {
                    "type": "string"
                },
                "productnumber": {
                    "type": "string"
                },
                "queue": {
                    "type": "string"
                }
            }
        },
        "controllers.Fixcomtype": {
            "type": "object",
            "properties": {
                "fixcomtypename": {
                    "type": "string"
                }
            }
        },
        "controllers.Gender": {
            "type": "object",
            "properties": {
                "gendername": {
                    "type": "string"
                }
            }
        },
        "controllers.Personal": {
            "type": "object",
            "properties": {
                "department": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "gender": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "personalname": {
                    "type": "string"
                },
                "title": {
                    "type": "integer"
                }
            }
        },
        "controllers.Product": {
            "type": "object",
            "properties": {
                "amountofproduct": {
                    "type": "string"
                },
                "brand": {
                    "type": "integer"
                },
                "personal": {
                    "type": "integer"
                },
                "price": {
                    "type": "string"
                },
                "productname": {
                    "type": "string"
                },
                "typeproduct": {
                    "type": "integer"
                }
            }
        },
        "controllers.Receipt": {
            "type": "object",
            "properties": {
                "added": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "adminrepair": {
                    "type": "integer"
                },
                "customer": {
                    "type": "integer"
                },
                "paymentType": {
                    "type": "integer"
                },
                "personal": {
                    "type": "integer"
                },
                "product": {
                    "type": "integer"
                },
                "productname": {
                    "type": "string"
                },
                "receiptcode": {
                    "type": "string"
                }
            }
        },
        "controllers.Title": {
            "type": "object"
        },
        "ent.Adminrepair": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the AdminrepairQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.AdminrepairEdges"
                },
                "equipmentdamate": {
                    "description": "Equipmentdamate holds the value of the \"equipmentdamate\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "numberrepair": {
                    "description": "Numberrepair holds the value of the \"numberrepair\" field.",
                    "type": "string"
                },
                "repairinformation": {
                    "description": "Repairinformation holds the value of the \"repairinformation\" field.",
                    "type": "string"
                }
            }
        },
        "ent.AdminrepairEdges": {
            "type": "object",
            "properties": {
                "adminrepairFix": {
                    "description": "AdminrepairFix holds the value of the AdminrepairFix edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Fix"
                },
                "adminrepairPersonal": {
                    "description": "AdminrepairPersonal holds the value of the AdminrepairPersonal edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Personal"
                },
                "adminrepairProduct": {
                    "description": "AdminrepairProduct holds the value of the AdminrepairProduct edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Product"
                },
                "receipt": {
                    "description": "Receipt holds the value of the receipt edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Receipt"
                    }
                }
            }
        },
        "ent.Brand": {
            "type": "object",
            "properties": {
                "Brandname": {
                    "description": "Brandname holds the value of the \"Brandname\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the BrandQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.BrandEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.BrandEdges": {
            "type": "object",
            "properties": {
                "product": {
                    "description": "Product holds the value of the product edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Product"
                    }
                }
            }
        },
        "ent.Customer": {
            "type": "object",
            "properties": {
                "Address": {
                    "description": "Address holds the value of the \"Address\" field.",
                    "type": "string"
                },
                "Customername": {
                    "description": "Customername holds the value of the \"Customername\" field.",
                    "type": "string"
                },
                "Identificationnumber": {
                    "description": "Identificationnumber holds the value of the \"Identificationnumber\" field.",
                    "type": "string"
                },
                "Phonenumber": {
                    "description": "Phonenumber holds the value of the \"Phonenumber\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the CustomerQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.CustomerEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.CustomerEdges": {
            "type": "object",
            "properties": {
                "fix": {
                    "description": "Fix holds the value of the fix edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Fix"
                    }
                },
                "gender": {
                    "description": "Gender holds the value of the gender edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Gender"
                },
                "personal": {
                    "description": "Personal holds the value of the personal edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Personal"
                },
                "receipt": {
                    "description": "Receipt holds the value of the receipt edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Receipt"
                    }
                },
                "title": {
                    "description": "Title holds the value of the title edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Title"
                }
            }
        },
        "ent.Department": {
            "type": "object",
            "properties": {
                "Departmentname": {
                    "description": "Departmentname holds the value of the \"Departmentname\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the DepartmentQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.DepartmentEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.DepartmentEdges": {
            "type": "object",
            "properties": {
                "personal": {
                    "description": "Personal holds the value of the personal edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Personal"
                    }
                }
            }
        },
        "ent.Fix": {
            "type": "object",
            "properties": {
                "Date": {
                    "description": "Date holds the value of the \"Date\" field.",
                    "type": "string"
                },
                "Problemtype": {
                    "description": "Problemtype holds the value of the \"Problemtype\" field.",
                    "type": "string"
                },
                "Productnumber": {
                    "description": "Productnumber holds the value of the \"Productnumber\" field.",
                    "type": "string"
                },
                "Queue": {
                    "description": "Queue holds the value of the \"Queue\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the FixQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.FixEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.FixEdges": {
            "type": "object",
            "properties": {
                "customer": {
                    "description": "Customer holds the value of the customer edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Customer"
                },
                "fix": {
                    "description": "Fix holds the value of the fix edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Adminrepair"
                },
                "fixbrand": {
                    "description": "Fixbrand holds the value of the fixbrand edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Fixbrand"
                },
                "fixcomtype": {
                    "description": "Fixcomtype holds the value of the fixcomtype edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Fixcomtype"
                },
                "personal": {
                    "description": "Personal holds the value of the personal edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Personal"
                }
            }
        },
        "ent.Fixbrand": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the FixbrandQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.FixbrandEdges"
                },
                "fixbrandname": {
                    "description": "Fixbrandname holds the value of the \"fixbrandname\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.FixbrandEdges": {
            "type": "object",
            "properties": {
                "fix": {
                    "description": "Fix holds the value of the fix edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Fix"
                    }
                }
            }
        },
        "ent.Fixcomtype": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the FixcomtypeQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.FixcomtypeEdges"
                },
                "fixcomtypename": {
                    "description": "Fixcomtypename holds the value of the \"fixcomtypename\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.FixcomtypeEdges": {
            "type": "object",
            "properties": {
                "fix": {
                    "description": "Fix holds the value of the fix edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Fix"
                    }
                }
            }
        },
        "ent.Gender": {
            "type": "object",
            "properties": {
                "Gendername": {
                    "description": "Gendername holds the value of the \"Gendername\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the GenderQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.GenderEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.GenderEdges": {
            "type": "object",
            "properties": {
                "customer": {
                    "description": "Customer holds the value of the customer edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Customer"
                    }
                },
                "personal": {
                    "description": "Personal holds the value of the personal edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Personal"
                    }
                }
            }
        },
        "ent.PaymentType": {
            "type": "object",
            "properties": {
                "Typename": {
                    "description": "Typename holds the value of the \"Typename\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the PaymentTypeQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.PaymentTypeEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.PaymentTypeEdges": {
            "type": "object",
            "properties": {
                "receipt": {
                    "description": "Receipt holds the value of the receipt edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Receipt"
                    }
                }
            }
        },
        "ent.Personal": {
            "type": "object",
            "properties": {
                "Email": {
                    "description": "Email holds the value of the \"Email\" field.",
                    "type": "string"
                },
                "Password": {
                    "description": "Password holds the value of the \"Password\" field.",
                    "type": "string"
                },
                "Personalname": {
                    "description": "Personalname holds the value of the \"Personalname\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the PersonalQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.PersonalEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.PersonalEdges": {
            "type": "object",
            "properties": {
                "customer": {
                    "description": "Customer holds the value of the customer edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Customer"
                    }
                },
                "department": {
                    "description": "Department holds the value of the department edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Department"
                },
                "fix": {
                    "description": "Fix holds the value of the fix edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Fix"
                    }
                },
                "gender": {
                    "description": "Gender holds the value of the gender edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Gender"
                },
                "personal": {
                    "description": "Personal holds the value of the personal edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Adminrepair"
                    }
                },
                "product": {
                    "description": "Product holds the value of the product edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Product"
                    }
                },
                "receipt": {
                    "description": "Receipt holds the value of the receipt edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Receipt"
                    }
                },
                "title": {
                    "description": "Title holds the value of the title edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Title"
                }
            }
        },
        "ent.Product": {
            "type": "object",
            "properties": {
                "Amountofproduct": {
                    "description": "Amountofproduct holds the value of the \"Amountofproduct\" field.",
                    "type": "integer"
                },
                "Price": {
                    "description": "Price holds the value of the \"Price\" field.",
                    "type": "integer"
                },
                "Productname": {
                    "description": "Productname holds the value of the \"Productname\" field.",
                    "type": "string"
                },
                "brand": {
                    "type": "integer"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the ProductQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.ProductEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "personal": {
                    "type": "integer"
                },
                "typeproduct": {
                    "type": "integer"
                }
            }
        },
        "ent.ProductEdges": {
            "type": "object",
            "properties": {
                "brand": {
                    "description": "Brand holds the value of the brand edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Brand"
                },
                "personal": {
                    "description": "Personal holds the value of the personal edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Personal"
                },
                "product": {
                    "description": "Product holds the value of the product edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Adminrepair"
                    }
                },
                "receipt": {
                    "description": "Receipt holds the value of the receipt edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Receipt"
                    }
                },
                "typeproduct": {
                    "description": "Typeproduct holds the value of the typeproduct edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Typeproduct"
                }
            }
        },
        "ent.Receipt": {
            "type": "object",
            "properties": {
                "Address": {
                    "description": "Address holds the value of the \"Address\" field.",
                    "type": "string"
                },
                "Productname": {
                    "description": "Productname holds the value of the \"Productname\" field.",
                    "type": "string"
                },
                "Receiptcode": {
                    "description": "Receiptcode holds the value of the \"Receiptcode\" field.",
                    "type": "string"
                },
                "added_time": {
                    "description": "AddedTime holds the value of the \"added_time\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the ReceiptQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.ReceiptEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.ReceiptEdges": {
            "type": "object",
            "properties": {
                "adminrepair": {
                    "description": "Adminrepair holds the value of the adminrepair edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Adminrepair"
                },
                "customer": {
                    "description": "Customer holds the value of the customer edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Customer"
                },
                "paymenttype": {
                    "description": "Paymenttype holds the value of the paymenttype edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.PaymentType"
                },
                "personal": {
                    "description": "Personal holds the value of the personal edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Personal"
                },
                "product": {
                    "description": "Product holds the value of the product edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Product"
                }
            }
        },
        "ent.Title": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the TitleQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.TitleEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "titlename": {
                    "description": "Titlename holds the value of the \"titlename\" field.",
                    "type": "string"
                }
            }
        },
        "ent.TitleEdges": {
            "type": "object",
            "properties": {
                "customer": {
                    "description": "Customer holds the value of the customer edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Customer"
                    }
                },
                "personal": {
                    "description": "Personal holds the value of the personal edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Personal"
                    }
                }
            }
        },
        "ent.Typeproduct": {
            "type": "object",
            "properties": {
                "Typeproductname": {
                    "description": "Typeproductname holds the value of the \"Typeproductname\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the TypeproductQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.TypeproductEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.TypeproductEdges": {
            "type": "object",
            "properties": {
                "product": {
                    "description": "Product holds the value of the product edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Product"
                    }
                }
            }
        },
        "gin.H": {
            "type": "object",
            "additionalProperties": true
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "BasicAuth": {
            "type": "basic"
        },
        "OAuth2AccessCode": {
            "type": "oauth2",
            "flow": "accessCode",
            "authorizationUrl": "https://example.com/oauth/authorize",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information"
            }
        },
        "OAuth2Application": {
            "type": "oauth2",
            "flow": "application",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "write": " Grants write access"
            }
        },
        "OAuth2Implicit": {
            "type": "oauth2",
            "flow": "implicit",
            "authorizationUrl": "https://example.com/oauth/authorize",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "write": " Grants write access"
            }
        },
        "OAuth2Password": {
            "type": "oauth2",
            "flow": "password",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "read": " Grants read access",
                "write": " Grants write access"
            }
        }
    }
}